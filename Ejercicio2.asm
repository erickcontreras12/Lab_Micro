.MODEL SMALL
.STACK
.DATA
	PALABRA1 DB 100 DUP(?)
	PALABRA2 DB 100 DUP(?)
	
	msj1 DB "INCRESE CADENA 1: $";
	msj2 DB "INCRESE CADENA 2: $";
	
	msjIgual DB "LAS CADENAS SON IGUALES $";
	msjDif DB "LAS CADENAS SON DIFERENTES $";
	
	Contador dw 0;
	LIMITE DB 100; 
.CODE

PROGRAMA:
	;INICIO DEL PROGRAMA
	MOV AX, @DATA
	MOV DS, AX
	
	;SE IMPRIME QUE INGRESE PRIMER NUMERO
	XOR DX, DX				
	MOV DX, OFFSET msj1 	
	MOV AH, 09h				
	INT 21h
	
	;SE LIMPIA EL APUNTADOR
	XOR SI, SI
	;LEER
	LEA SI, PALABRA1
	
	
	
	CALL LEERCADENA
	CALL ImprimirSalto
	
	
	;SE IMPRIME QUE INGRESE PRIMER NUMERO
	XOR DX, DX				
	MOV DX, OFFSET msj2 	
	MOV AH, 09h				
	INT 21h
	
	LEA SI, PALABRA2
	CALL LEERCADENA
	
	CALL COMPARAR
	
	FINALIZAR:
	;FIN DEL PROGRAMA
	MOV AH, 4Ch
	INT 21h
	
	LEERCADENA PROC NEAR
		LLENARCADENA:
			
			CALL LEERCARACTER
			CMP AL, 0Dh		;COMPARA SI ES ENTER
			JE TERMINARCADENA
			MOV [SI], AL	;GUARDA EN [SI] LO QUE LEYO DEL TECLADO
			INC SI
			JMP LLENARCADENA
	
	TERMINARCADENA:
		INC SI
		MOV [SI], 24h
		
		RET
	LEERCADENA ENDP
	
	
	LEERCARACTER PROC NEAR
		XOR AX, AX
		MOV AH, 01h 	;LEE EL CARACTER
		INT 21h
		RET
	LEERCARACTER ENDP
	
	ImprimirSalto PROC NEAR
		;SE IMPRIME SALTO DE LINEA
		XOR AX, AX  
		MOV DL,10       
		MOV AH,02
		INT 21h
        
		;SE IMPRIME RETORNO DE CARRO
		XOR AX, AX
		MOV DL,13       
		MOV AH,02
		INT 21h
		
		RET
	ImprimirSalto ENDP
	
	COMPARAR PROC NEAR
	
	RECORRER:
	CMP CONTADOR, 100
	JE IGUAL
	
	LEA SI, PALABRA1
	ADD SI, CONTADOR
	MOV CL, [SI]
	
	LEA SI, PALABRA2
	ADD SI, CONTADOR
	CMP CL, [SI]
	JNE NOIGUAL
	ADD CONTADOR, 1
	JMP RECORRER
	
	IGUAL:
	CALL ImprimirSalto
	;SE IMPRIME LA CADENA
	XOR DX, DX				
	MOV DX, OFFSET msjIgual 	
	MOV AH, 09h				
	INT 21h
	JMP FINALIZAR
	
	NOIGUAL:
	CALL ImprimirSalto
	;SE IMPRIME LA CADENA
	XOR DX, DX				
	MOV DX, OFFSET msjDif 	
	MOV AH, 09h				
	INT 21h
	JMP FINALIZAR
	
	
	
	RET
	COMPARAR ENDP
	
	
	
END PROGRAMA